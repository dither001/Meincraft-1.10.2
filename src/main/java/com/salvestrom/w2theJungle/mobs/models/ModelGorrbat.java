// Date: 04/11/2015 19:30:47
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.salvestrom.w2theJungle.mobs.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

import org.lwjgl.opengl.GL11;

import com.salvestrom.w2theJungle.mobs.entity.EntityGorrbat;


public class ModelGorrbat extends ModelBase
{
  //fields
    public ModelRenderer head;
    ModelRenderer mouth;
    ModelRenderer mouthlower;
    ModelRenderer nose;
    ModelRenderer upperbody;
    public ModelRenderer lowerbody;
    ModelRenderer rightleg;
    ModelRenderer rightleglower;
    ModelRenderer leftleg;
    ModelRenderer leftleglower;
    ModelRenderer rightshoulder;
    ModelRenderer rightarm;
    ModelRenderer rightforearm;
    ModelRenderer leftshoulder;
    ModelRenderer leftarm;
    ModelRenderer leftforearm;
    ModelRenderer rwShoulder;
    ModelRenderer rwupperarm;
    ModelRenderer rwelbow;
    ModelRenderer rwwrist;
    ModelRenderer rwthumb;
    ModelRenderer rwthumbclaw;
    ModelRenderer rwlowerarm;
    ModelRenderer rwfinger1;
    ModelRenderer rwfinger1b;
    ModelRenderer rwfinger1c;
    ModelRenderer rwfinger1claw;
    ModelRenderer rwfinger2;
    ModelRenderer rwfinger2b;
    ModelRenderer rwfinger2c;
    ModelRenderer rwfinger2claw;
    ModelRenderer rwfinger3;
    ModelRenderer rwfinger3b;
    ModelRenderer rwfinger3c;
    ModelRenderer rwfinger3claw;
    ModelRenderer rwelbow2;
    ModelRenderer rwelbow2b;
    ModelRenderer rwmembrane1;
    ModelRenderer rwmembrane1b;
    ModelRenderer rwmembrane2;
    ModelRenderer rwmembrane2b;
    ModelRenderer rwmembrane3;
    ModelRenderer rwmembrane3b;
    ModelRenderer rwmembrane4;
    ModelRenderer rwmembrane4b;
    ModelRenderer rwmembrane5;
    ModelRenderer rwmembrane5b;
    ModelRenderer rwmembrane6;
    ModelRenderer rwmembrane7;
    ModelRenderer rwmembrane8;
    ModelRenderer rwmembrane9;
    ModelRenderer rwmembrane10;
    
    ModelRenderer lwShoulder;
    ModelRenderer lwupperarm;
    ModelRenderer lwelbow;
    ModelRenderer lwwrist;
    ModelRenderer lwthumb;
    ModelRenderer lwthumbclaw;
    ModelRenderer lwlowerarm;
    ModelRenderer lwfinger1;
    ModelRenderer lwfinger1b;
    ModelRenderer lwfinger1c;
    ModelRenderer lwfinger1claw;
    ModelRenderer lwfinger2;
    ModelRenderer lwfinger2b;
    ModelRenderer lwfinger2c;
    ModelRenderer lwfinger2claw;
    ModelRenderer lwfinger3;
    ModelRenderer lwfinger3b;
    ModelRenderer lwfinger3c;
    ModelRenderer lwfinger3claw;
    ModelRenderer lwelbow2;
    ModelRenderer lwelbow2b;
    ModelRenderer lwmembrane1;
    ModelRenderer lwmembrane1b;
    ModelRenderer lwmembrane2;
    ModelRenderer lwmembrane2b;
    ModelRenderer lwmembrane3;
    ModelRenderer lwmembrane3b;
    ModelRenderer lwmembrane4;
    ModelRenderer lwmembrane4b;
    ModelRenderer lwmembrane5;
    ModelRenderer lwmembrane5b;
    ModelRenderer lwmembrane6;
    ModelRenderer lwmembrane7;
    ModelRenderer lwmembrane8;
    ModelRenderer lwmembrane9;
    ModelRenderer lwmembrane10;
    
    ModelRenderer rwmem11;
    ModelRenderer lwmem11;
    
    ModelRenderer rwmembrane6b;
    ModelRenderer rwmembrane7b;
    ModelRenderer lwmembrane6b;
    ModelRenderer lwmembrane7b;
    
    ModelRenderer toothr;
    ModelRenderer toothl;    
    
    public static float rads = (float) (180/Math.PI); 

  
  public ModelGorrbat()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-3F, -8F, -3F, 6, 8, 6);
      head.setRotationPoint(0F, -7F, -2F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      mouth = new ModelRenderer(this, 25, 0);
      mouth.addBox(-2.5F, -2F, -3F, 5, 2, 6);
      mouth.setRotationPoint(0F, -1F, -1F);
      mouth.setTextureSize(64, 32);
      mouth.mirror = true;
      setRotation(mouth, 0F, 0F, 0F);
      mouthlower = new ModelRenderer(this, 25, 9);
      mouthlower.addBox(-3F, -2F, -5F, 6, 4, 6);
      mouthlower.setRotationPoint(0F, 1F, 0.5F);
      mouthlower.setTextureSize(64, 32);
      mouthlower.mirror = true;
      setRotation(mouthlower, 0F, 0F, 0F);
      nose = new ModelRenderer(this, 50, 0);
      nose.addBox(-1F, -1F, -1F, 2, 3, 2);
      nose.setRotationPoint(0F, -4F, -3.5F);
      nose.setTextureSize(64, 32);
      nose.mirror = true;
      setRotation(nose, 0F, 0F, 0F);
      upperbody = new ModelRenderer(this, 17, 20);
      upperbody.addBox(-5.5F, -7F, -3F, 11, 7, 6);
      upperbody.setRotationPoint(0F, -6F, 0F);
      upperbody.setTextureSize(64, 32);
      upperbody.mirror = true;
      setRotation(upperbody, 0F, 0F, 0F);
      lowerbody = new ModelRenderer(this, 17, 34);
      lowerbody.addBox(-4.5F, -8, -2.5F, 9, 8, 5);
      lowerbody.setRotationPoint(0F, 16F, 6F);
      lowerbody.setTextureSize(64, 32);
      lowerbody.mirror = true;
      setRotation(lowerbody, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-2F, 0F, -2F, 3, 5, 3);
      rightleg.setRotationPoint(-3F, -1F, -1F);
      rightleg.setTextureSize(64, 32);
      //rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      rightleglower = new ModelRenderer(this, 0, 25);
      rightleglower.addBox(-2F, 0F, -1F, 4, 5, 4);
      rightleglower.setRotationPoint(-1F, 5F, -1.5F);
      rightleglower.setTextureSize(64, 32);
      //rightleglower.mirror = true;
      setRotation(rightleglower, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.mirror = true;
      leftleg.addBox(-1F, 0F, -2F, 3, 5, 3);
      leftleg.setRotationPoint(3F, -1F, -1F);
      leftleg.setTextureSize(64, 32);
      setRotation(leftleg, 0F, 0F, 0F);
      leftleglower = new ModelRenderer(this, 0, 25);
      leftleglower.mirror = true;
      leftleglower.addBox(-2F, 0F, -1F, 4, 5, 4);
      leftleglower.setRotationPoint(1F, 5F, -1.5F);
      leftleglower.setTextureSize(64, 32);
      setRotation(leftleglower, 0F, 0F, 0F);
      rightshoulder = new ModelRenderer(this, 52, 16);
      rightshoulder.addBox(-2.5F, -3F, -2.5F, 5, 5, 5);
      rightshoulder.setRotationPoint(0F, 0F, 0F);
      rightshoulder.setTextureSize(64, 32);
      //rightshoulder.mirror = true;
      setRotation(rightshoulder, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 52, 27);
      rightarm.addBox(-2F, -1F, -2F, 4, 9, 4);
      rightarm.setRotationPoint(-7.5F, -5F, -0.5F);
      rightarm.setTextureSize(64, 32);
      //rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0F);
      rightforearm = new ModelRenderer(this, 52, 41);
      rightforearm.addBox(-2.5F, -1F, -2.5F, 5, 10, 5);
      rightforearm.setRotationPoint(0F, 8F, 0F);
      rightforearm.setTextureSize(64, 32);
      //rightforearm.mirror = true;
      setRotation(rightforearm, 0F, 0F, 0F);
      leftshoulder = new ModelRenderer(this, 52, 16);
      leftshoulder.mirror = true;
      leftshoulder.addBox(-2.5F, -3F, -2.5F, 5, 5, 5);
      leftshoulder.setRotationPoint(0F, 0F, 0F);
      leftshoulder.setTextureSize(64, 32);
      setRotation(leftshoulder, 0F, 0F, 0F);
      leftarm = new ModelRenderer(this, 52, 27);
      leftarm.mirror = true;
      leftarm.addBox(-2F, -1F, -2F, 4, 9, 4);
      leftarm.setRotationPoint(7.5F, -5F, -0.5F);
      leftarm.setTextureSize(64, 32);
      setRotation(leftarm, 0F, 0F, 0F);
      leftforearm = new ModelRenderer(this, 52, 41);
      leftforearm.mirror = true;
      leftforearm.addBox(-2.5F, -1F, -2.5F, 5, 10, 5);
      leftforearm.setRotationPoint(0F, 8F, 0F);
      leftforearm.setTextureSize(64, 32);
      setRotation(leftforearm, 0F, 0F, 0F);
//wings
      
      rwShoulder = new ModelRenderer(this, 0, 40);
      rwShoulder.addBox(-1F, -1F, 0F, 2, 2, 2);
      rwShoulder.setRotationPoint(-3.5f, -5, 3);
      rwShoulder.setTextureSize(64, 32);
      rwShoulder.mirror = true;
      setRotation(rwShoulder, 0F, 0F, 0F);
      rwupperarm = new ModelRenderer(this, 0, 45);
      rwupperarm.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      rwupperarm.setRotationPoint(0, 0, 1);
      rwupperarm.setTextureSize(64, 32);
      rwupperarm.mirror = true;
      setRotation(rwupperarm, 0F, 0F, 0F);
      rwelbow = new ModelRenderer(this, 0, 52);
      rwelbow.addBox(-1F, -1F, -1F, 2, 2, 2);
      rwelbow.setRotationPoint(0, 0, 5);
      rwelbow.setTextureSize(64, 32);
      rwelbow.mirror = true;
      setRotation(rwelbow, 0F, 0F, 0F);
      rwlowerarm = new ModelRenderer(this, 0, 57);
      rwlowerarm.addBox(-0.5F, -0.5F, 0F, 1, 1, 7);
      rwlowerarm.setRotationPoint(0F, 0F, 0F);
      rwlowerarm.setTextureSize(64, 32);
      rwlowerarm.mirror = true;
      setRotation(rwlowerarm, 0F, 0F, 0F);
      rwwrist = new ModelRenderer(this, 0, 66);
      rwwrist.addBox(-1F, -1F, -1F, 2, 2, 2);
      rwwrist.setRotationPoint(0F, 0F, 7F);
      rwwrist.setTextureSize(64, 32);
      rwwrist.mirror = true;
      setRotation(rwwrist, 0F, 0F, 0F);
      rwthumb = new ModelRenderer(this, 0, 71);
      rwthumb.addBox(-0.5F, -4F, -0.5F, 1, 4, 1);
      rwthumb.setRotationPoint(0F, 0F, 0F);
      rwthumb.setTextureSize(64, 32);
      rwthumb.mirror = true;
      setRotation(rwthumb, -10/rads, 0F, 0F);
      rwthumbclaw = new ModelRenderer(this, 0, 77);
      rwthumbclaw.addBox(-0.5466667F, -2F, -0.48F, 1, 2, 1);
      rwthumbclaw.setRotationPoint(0, -3.5f, -0.25f);
      rwthumbclaw.setTextureSize(64, 32);
      rwthumbclaw.mirror = true;
      setRotation(rwthumbclaw, -45/rads, -45/rads, 0F);
      rwfinger1 = new ModelRenderer(this, 9, 99);
      rwfinger1.addBox(-0.5F, -0.5F, 0F, 1, 1, 14);
      rwfinger1.setRotationPoint(0F, 0F, 0F);
      rwfinger1.setTextureSize(64, 32);
      rwfinger1.mirror = true;
      setRotation(rwfinger1, 0F, 0F, 0F);
      rwfinger1b = new ModelRenderer(this, 40, 99);
      rwfinger1b.addBox(-0.5F, -0.5F, 0F, 1, 1, 7);
      rwfinger1b.setRotationPoint(0F, 0F, 13F);
      rwfinger1b.setTextureSize(64, 32);
      rwfinger1b.mirror = true;
      setRotation(rwfinger1b, -0.1745329F, 0F, 0F);
      rwfinger1c = new ModelRenderer(this, 40, 108);
      rwfinger1c.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      rwfinger1c.setRotationPoint(0F, 0F, 6F);
      rwfinger1c.setTextureSize(64, 32);
      rwfinger1c.mirror = true;
      setRotation(rwfinger1c, -10/rads, 0F, 0F);
      rwfinger1claw = new ModelRenderer(this, 53, 108);
      rwfinger1claw.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 2);
      rwfinger1claw.setRotationPoint(0F, 0F, 4F);
      rwfinger1claw.setTextureSize(64, 32);
      rwfinger1claw.mirror = true;
      setRotation(rwfinger1claw, -25/rads, -45/rads, 0F);
      rwfinger2 = new ModelRenderer(this, 9, 82);
      rwfinger2.addBox(-0.5F, -0.5F, 0F, 1, 1, 14);
      rwfinger2.setRotationPoint(0F, 0F, 0F);
      rwfinger2.setTextureSize(64, 32);
      rwfinger2.mirror = true;
      setRotation(rwfinger2, -0.7853982F, 0F, 0F);
      rwfinger2b = new ModelRenderer(this, 40, 82);
      rwfinger2b.addBox(-0.5F, -0.5F, 0F, 1, 1, 6);
      rwfinger2b.setRotationPoint(0F, 0F, 13F);
      rwfinger2b.setTextureSize(64, 32);
      rwfinger2b.mirror = true;
      setRotation(rwfinger2b, -10/rads, 0F, 0F);
      rwfinger2c = new ModelRenderer(this, 40, 90);
      rwfinger2c.addBox(-0.5F, -0.5F, 0F, 1, 1, 4);
      rwfinger2c.setRotationPoint(0F, 0F, 5F);
      rwfinger2c.setTextureSize(64, 32);
      rwfinger2c.mirror = true;
      setRotation(rwfinger2c, -10/rads, 0F, 0F);
      rwfinger2claw = new ModelRenderer(this, 51, 90);
      rwfinger2claw.addBox(-0.5F, -0.5F, 0F, 1, 1, 2);
      rwfinger2claw.setRotationPoint(0F, 0F, 3.5F);
      rwfinger2claw.setTextureSize(64, 32);
      rwfinger2claw.mirror = true;
      setRotation(rwfinger2claw, -25/rads, -45/rads, 0F);
      rwfinger3 = new ModelRenderer(this, 9, 66);
      rwfinger3.addBox(-0.5F, -0.5F, 0F, 1, 1, 13);
      rwfinger3.setRotationPoint(0F, 0F, 0F);
      rwfinger3.setTextureSize(64, 32);
      rwfinger3.mirror = true;
      setRotation(rwfinger3, -90/rads, 0F, 0F);
      rwfinger3b = new ModelRenderer(this, 38, 66);
      rwfinger3b.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      rwfinger3b.setRotationPoint(0, 0, 12);
      rwfinger3b.setTextureSize(64, 32);
      rwfinger3b.mirror = true;
      setRotation(rwfinger3b, -10/rads, 0F, 0F);
      rwfinger3c = new ModelRenderer(this, 38, 73);
      rwfinger3c.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
      rwfinger3c.setRotationPoint(0F, 0F, 4F);
      rwfinger3c.setTextureSize(64, 32);
      rwfinger3c.mirror = true;
      setRotation(rwfinger3c, -10/rads, 0F, 0F);
      rwfinger3claw = new ModelRenderer(this, 47, 73);
      rwfinger3claw.addBox(-0.5F, -0.5F, -0.50F, 1, 1, 2);
      rwfinger3claw.setRotationPoint(0F, 0F, 2.5F);
      rwfinger3claw.setTextureSize(64, 32);
      rwfinger3claw.mirror = true;
      setRotation(rwfinger3claw, -35/rads, -45/rads, 0F);
      rwelbow2 = new ModelRenderer(this, 9, 52);
      rwelbow2.addBox(-0.5F, -1.0F, 0F, 1, 2, 2);
      rwelbow2.setRotationPoint(0, 0, 0);
      rwelbow2.setTextureSize(64, 32);
      rwelbow2.mirror = true;
      setRotation(rwelbow2, -90/rads, 0F, 0F);
      rwelbow2b = new ModelRenderer(this, 16, 52);
      rwelbow2b.addBox(-0.5F, -0.5F, 0F, 1, 1, 2);
      rwelbow2b.setRotationPoint(0, 0, 1);
      rwelbow2b.setTextureSize(64, 32);
      rwelbow2b.mirror = true;
      setRotation(rwelbow2b, 0f, 0F, 0F);
      rwmembrane1 = new ModelRenderer(this, 73, 0);
      rwmembrane1.addBox(0F, -0.5F, 0F, 0, 5, 13);
      rwmembrane1.setRotationPoint(0, 1, 1);
      rwmembrane1.setTextureSize(64, 32);
      rwmembrane1.mirror = true;
      setRotation(rwmembrane1, 0F, 0F, 0F);
      rwmembrane1b = new ModelRenderer(this, 100, 0);
      rwmembrane1b.addBox(0F, -0.5F, 0F, 0, 6, 7);
      rwmembrane1b.setRotationPoint(0, 1, 0);
      rwmembrane1b.setTextureSize(64, 32);
      rwmembrane1b.mirror = true;
      setRotation(rwmembrane1b, 0F, 0F, 0F);
      rwmembrane2 = new ModelRenderer(this, 100, 0);
      rwmembrane2.addBox(0F, -5F, 0F, 0, 5, 14);
      rwmembrane2.setRotationPoint(0, 0, 0f);
      rwmembrane2.setTextureSize(64, 32);
      rwmembrane2.mirror = true;
      setRotation(rwmembrane2, 0f, 0F, 0F);
      rwmembrane2b = new ModelRenderer(this, 89, 0);
      rwmembrane2b.addBox(0F, -5.5F, 0F, 0, 6, 5);
      rwmembrane2b.setRotationPoint(0, -0.75f, .075f);
      rwmembrane2b.setTextureSize(64, 32);
      rwmembrane2b.mirror = true;
      setRotation(rwmembrane2b, 0F, 0F, 0F);
      rwmembrane3 = new ModelRenderer(this, 73, 19);
      rwmembrane3.addBox(0F, -0.5F, 0F, 0, 5, 13);
      rwmembrane3.setRotationPoint(0, 0.5f, 1f);
      rwmembrane3.setTextureSize(64, 32);
      rwmembrane3.mirror = true;
      setRotation(rwmembrane3, 0F, 0F, 0F);
      rwmembrane3b = new ModelRenderer(this, 73, 19);
      rwmembrane3b.addBox(0F, -0.5F, 0F, 0, 5, 5);
      rwmembrane3b.setRotationPoint(0F, 0F, 0F);
      rwmembrane3b.setTextureSize(64, 32);
      rwmembrane3b.mirror = true;
      setRotation(rwmembrane3b, 0F, 0F, 0F);
      rwmembrane4 = new ModelRenderer(this, 100, 19);
      rwmembrane4.addBox(0F, -0.5F, 0F, 0, 5, 13);
      rwmembrane4.setRotationPoint(0, 0, 1f);
      rwmembrane4.setTextureSize(64, 32);
      rwmembrane4.mirror = true;
      setRotation(rwmembrane4, 23/rads, 0F, 0F);
      rwmembrane4b = new ModelRenderer(this, 100, 19);
      rwmembrane4b.addBox(0F, -4.5F, 0F, 0, 5, 5);
      rwmembrane4b.setRotationPoint(0, 0, 0);
      rwmembrane4b.setTextureSize(64, 32);
      rwmembrane4b.mirror = true;
      setRotation(rwmembrane4b, 10F/rads, 0F, 0F);
      rwmembrane5 = new ModelRenderer(this, 73, 39);
      rwmembrane5.addBox(0F, 0F, 0F, 0, 5, 13);
      rwmembrane5.setRotationPoint(0, 0, 0f);
      rwmembrane5.setTextureSize(64, 32);
      rwmembrane5.mirror = true;
      setRotation(rwmembrane5, 0F, 0F, 0F);
      rwmembrane5b = new ModelRenderer(this, 111, 19);
      rwmembrane5b.addBox(0F, -0.5F, 0F, 0, 5, 5);
      rwmembrane5b.setRotationPoint(0F, 0F, 0F);
      rwmembrane5b.setTextureSize(64, 32);
      rwmembrane5b.mirror = true;
      setRotation(rwmembrane5b, 0F, 0F, 0F);
      rwmembrane6 = new ModelRenderer(this, 100, 39);
      rwmembrane6.addBox(0F, 0F, 0F, 0, 5, 7);
      rwmembrane6.setRotationPoint(0, 0, 0f);
      rwmembrane6.setTextureSize(64, 32);
      rwmembrane6.mirror = true;
      setRotation(rwmembrane6, 0F, 0F, 0F);
      rwmembrane6b = new ModelRenderer(this, 118, 39);
      rwmembrane6b.addBox(0F, 0F, 0F, 0, 12, 4);
      rwmembrane6b.setRotationPoint(0, 0, 0f);
      rwmembrane6b.setTextureSize(64, 32);
      rwmembrane6b.mirror = true;
      setRotation(rwmembrane6b, 0F, 0F, 0F);
      rwmembrane7 = new ModelRenderer(this, 79, 59);
      rwmembrane7.addBox(0F, 0F, 0F, 0, 5, 5);
      rwmembrane7.setRotationPoint(0, 0, 0f);
      rwmembrane7.setTextureSize(64, 32);
      rwmembrane7.mirror = true;
      setRotation(rwmembrane7, 0, 0F, 0F);
      rwmembrane7b = new ModelRenderer(this, 70, 59);
      rwmembrane7b.addBox(0F, 0F, -4F, 0, 11, 4);
      rwmembrane7b.setRotationPoint(0, 0, 0f);
      rwmembrane7b.setTextureSize(64, 32);
      rwmembrane7b.mirror = true;
      setRotation(rwmembrane7b, 0, 0F, 0F);
      rwmembrane8 = new ModelRenderer(this, 100, 59);
      rwmembrane8.addBox(0F, -4.5F, 0F, 0, 5, 9);
      rwmembrane8.setRotationPoint(0, 0, -1f);
      rwmembrane8.setTextureSize(64, 32);
      rwmembrane8.mirror = true;
      setRotation(rwmembrane8, -90F/rads, 0F, 0F);
      rwmembrane9 = new ModelRenderer(this, 85, 75);
      rwmembrane9.addBox(0F, -0.5F, -7F, 0, 3, 7);
      rwmembrane9.setRotationPoint(0, 0, 7f);
      rwmembrane9.setTextureSize(64, 32);
      rwmembrane9.mirror = true;
      setRotation(rwmembrane9, -20F/rads, 0F, 0F);
      rwmembrane10 = new ModelRenderer(this, 100, 75);
      rwmembrane10.addBox(0F, -0.5F, 0F, 0, 3, 7);
      rwmembrane10.setRotationPoint(0, 0, -1f);
      rwmembrane10.setTextureSize(64, 32);
      rwmembrane10.mirror = true;
      setRotation(rwmembrane10, 20F/rads, 0F, 0F);
      
      lwShoulder = new ModelRenderer(this, 0, 40);
      lwShoulder.mirror = true;
      lwShoulder.addBox(-1F, -1F, 0F, 2, 2, 2);
      lwShoulder.setRotationPoint(3.5f, -5, 3);
      lwShoulder.setTextureSize(64, 32);
      setRotation(lwShoulder, 0F, 0F, 0F);
      lwupperarm = new ModelRenderer(this, 0, 45);
      lwupperarm.mirror = true;
      lwupperarm.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      lwupperarm.setRotationPoint(0, 0, 1);
      lwupperarm.setTextureSize(64, 32);
      setRotation(lwupperarm, 0F, 0F, 0F);
      lwelbow = new ModelRenderer(this, 0, 52);
      lwelbow.mirror = true;
      lwelbow.addBox(-1F, -1F, -1F, 2, 2, 2);
      lwelbow.setRotationPoint(0, 0, 5);
      lwelbow.setTextureSize(64, 32);
      setRotation(lwelbow, 0F, 0F, 0F);
      lwlowerarm = new ModelRenderer(this, 0, 57);
      lwlowerarm.mirror = true;
      lwlowerarm.addBox(-0.5F, -0.5F, 0F, 1, 1, 7);
      lwlowerarm.setRotationPoint(0F, 0F, 0F);
      lwlowerarm.setTextureSize(64, 32);
      setRotation(lwlowerarm, 0F, 0F, 0F);
      lwwrist = new ModelRenderer(this, 0, 66);
      lwwrist.mirror = true;
      lwwrist.addBox(-1F, -1F, -1F, 2, 2, 2);
      lwwrist.setRotationPoint(0F, 0F, 7F);
      lwwrist.setTextureSize(64, 32);
      setRotation(lwwrist, 0F, 0F, 0F);
      lwthumb = new ModelRenderer(this, 0, 71);
      lwthumb.mirror = true;
      lwthumb.addBox(-0.5F, -4F, -0.5F, 1, 4, 1);
      lwthumb.setRotationPoint(0F, 0F, 0F);
      lwthumb.setTextureSize(64, 32);
      setRotation(lwthumb, -10/rads, 0F, 0F);
      lwthumbclaw = new ModelRenderer(this, 0, 77);
      lwthumbclaw.mirror = true;
      lwthumbclaw.addBox(-0.5466667F, -2F, -0.48F, 1, 2, 1);
      lwthumbclaw.setRotationPoint(0, -3.5f, -0.25f);
      lwthumbclaw.setTextureSize(64, 32);
      setRotation(lwthumbclaw, -45/rads, 45/rads, 0F);
      lwfinger1 = new ModelRenderer(this, 9, 99);
      lwfinger1.mirror = true;
      lwfinger1.addBox(-0.5F, -0.5F, 0F, 1, 1, 14);
      lwfinger1.setRotationPoint(0F, 0F, 0F);
      lwfinger1.setTextureSize(64, 32);
      setRotation(lwfinger1, 0F, 0F, 0F);
      lwfinger1b = new ModelRenderer(this, 40, 99);
      lwfinger1b.mirror = true;
      lwfinger1b.addBox(-0.5F, -0.5F, 0F, 1, 1, 7);
      lwfinger1b.setRotationPoint(0F, 0F, 13F);
      lwfinger1b.setTextureSize(64, 32);
      setRotation(lwfinger1b, -0.1745329F, 0F, 0F);
      lwfinger1c = new ModelRenderer(this, 40, 108);
      lwfinger1c.mirror = true;
      lwfinger1c.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      lwfinger1c.setRotationPoint(0F, 0F, 6F);
      lwfinger1c.setTextureSize(64, 32);
      setRotation(lwfinger1c, -10/rads, 0F, 0F);
      lwfinger1claw = new ModelRenderer(this, 53, 108);
      lwfinger1claw.mirror = true;
      lwfinger1claw.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 2);
      lwfinger1claw.setRotationPoint(0F, 0F, 4F);
      lwfinger1claw.setTextureSize(64, 32);
      setRotation(lwfinger1claw, -25/rads, 45/rads, 0F);
      lwfinger2 = new ModelRenderer(this, 9, 82);
      lwfinger2.mirror = true;
      lwfinger2.addBox(-0.5F, -0.5F, 0F, 1, 1, 14);
      lwfinger2.setRotationPoint(0F, 0F, 0F);
      lwfinger2.setTextureSize(64, 32);
      setRotation(lwfinger2, -0.7853982F, 0F, 0F);
      lwfinger2b = new ModelRenderer(this, 40, 82);
      lwfinger2b.mirror = true;
      lwfinger2b.addBox(-0.5F, -0.5F, 0F, 1, 1, 6);
      lwfinger2b.setRotationPoint(0F, 0F, 13F);
      lwfinger2b.setTextureSize(64, 32);
      setRotation(lwfinger2b, -10/rads, 0F, 0F);
      lwfinger2c = new ModelRenderer(this, 40, 90);
      lwfinger2c.mirror = true;
      lwfinger2c.addBox(-0.5F, -0.5F, 0F, 1, 1, 4);
      lwfinger2c.setRotationPoint(0F, 0F, 5F);
      lwfinger2c.setTextureSize(64, 32);
      setRotation(lwfinger2c, -10/rads, 0F, 0F);
      lwfinger2claw = new ModelRenderer(this, 51, 90);
      lwfinger2claw.mirror = true;
      lwfinger2claw.addBox(-0.5F, -0.5F, 0F, 1, 1, 2);
      lwfinger2claw.setRotationPoint(0F, 0F, 3.5F);
      lwfinger2claw.setTextureSize(64, 32);
      setRotation(lwfinger2claw, -25/rads, 45/rads, 0F);
      lwfinger3 = new ModelRenderer(this, 9, 66);
      lwfinger3.mirror = true;
      lwfinger3.addBox(-0.5F, -0.5F, 0F, 1, 1, 13);
      lwfinger3.setRotationPoint(0F, 0F, 0F);
      lwfinger3.setTextureSize(64, 32);
      setRotation(lwfinger3, -90/rads, 0F, 0F);
      lwfinger3b = new ModelRenderer(this, 38, 66);
      lwfinger3b.mirror = true;
      lwfinger3b.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
      lwfinger3b.setRotationPoint(0, 0, 12);
      lwfinger3b.setTextureSize(64, 32);
      setRotation(lwfinger3b, -10/rads, 0F, 0F);
      lwfinger3c = new ModelRenderer(this, 38, 73);
      lwfinger3c.mirror = true;
      lwfinger3c.addBox(-0.5F, -0.5F, 0F, 1, 1, 3);
      lwfinger3c.setRotationPoint(0F, 0F, 4F);
      lwfinger3c.setTextureSize(64, 32);
      setRotation(lwfinger3c, -10/rads, 0F, 0F);
      lwfinger3claw = new ModelRenderer(this, 47, 73);
      lwfinger3claw.mirror = true;
      lwfinger3claw.addBox(-0.5F, -0.5F, -0.50F, 1, 1, 2);
      lwfinger3claw.setRotationPoint(0F, 0F, 2.5F);
      lwfinger3claw.setTextureSize(64, 32);
      setRotation(lwfinger3claw, -35/rads, 45/rads, 0F);
      lwelbow2 = new ModelRenderer(this, 9, 52);
      lwelbow2.mirror = true;
      lwelbow2.addBox(-0.5F, -1.0F, 0F, 1, 2, 2);
      lwelbow2.setRotationPoint(0, 0, 0);
      lwelbow2.setTextureSize(64, 32);
      setRotation(lwelbow2, -90/rads, 0F, 0F);
      lwelbow2b = new ModelRenderer(this, 16, 52);
      lwelbow2b.mirror = true;
      lwelbow2b.addBox(-0.5F, -0.5F, 0F, 1, 1, 2);
      lwelbow2b.setRotationPoint(0, 0, 1);
      lwelbow2b.setTextureSize(64, 32);
      setRotation(lwelbow2b, 0f, 0F, 0F);
      lwmembrane1 = new ModelRenderer(this, 73, 0);
      lwmembrane1.addBox(0F, -0.5F, 0F, 0, 5, 13);
      lwmembrane1.setRotationPoint(0, 1, 1);
      lwmembrane1.setTextureSize(64, 32);
      lwmembrane1.mirror = true;
      setRotation(lwmembrane1, 0F, 0F, 0F);
      lwmembrane1b = new ModelRenderer(this, 100, 0);
      lwmembrane1b.addBox(0F, -0.5F, 0F, 0, 6, 7);
      lwmembrane1b.setRotationPoint(0, 1, 0);
      lwmembrane1b.setTextureSize(64, 32);
      lwmembrane1b.mirror = true;
      setRotation(lwmembrane1b, 0F, 0F, 0F);
      lwmembrane2 = new ModelRenderer(this, 100, 0);
      lwmembrane2.addBox(0F, -5F, 0F, 0, 5, 14);
      lwmembrane2.setRotationPoint(0, 0, 0f);
      lwmembrane2.setTextureSize(64, 32);
      lwmembrane2.mirror = true;
      setRotation(lwmembrane2, 0, 0F, 0F);
      lwmembrane2b = new ModelRenderer(this, 89, 0);
      lwmembrane2b.addBox(0F, -5.5F, 0F, 0, 6, 5);
      lwmembrane2b.setRotationPoint(0, -0.75f, .075f);
      lwmembrane2b.setTextureSize(64, 32);
      lwmembrane2b.mirror = true;
      setRotation(lwmembrane2b, 0F, 0F, 0F);
      lwmembrane3 = new ModelRenderer(this, 73, 19);
      lwmembrane3.addBox(0F, -0.5F, 0F, 0, 5, 13);
      lwmembrane3.setRotationPoint(0, .5f, 1f);
      lwmembrane3.setTextureSize(64, 32);
      lwmembrane3.mirror = true;
      setRotation(lwmembrane3, 0F, 0F, 0F);
      lwmembrane3b = new ModelRenderer(this, 73, 19);
      lwmembrane3b.addBox(0F, -0.5F, 0F, 0, 5, 5);
      lwmembrane3b.setRotationPoint(0F, 0F, 0F);
      lwmembrane3b.setTextureSize(64, 32);
      lwmembrane3b.mirror = true;
      setRotation(lwmembrane3b, 0F, 0F, 0F);
      lwmembrane4 = new ModelRenderer(this, 100, 19);
      lwmembrane4.addBox(0F, -0.5F, 0F, 0, 5, 13);
      lwmembrane4.setRotationPoint(0, 0, 1f);
      lwmembrane4.setTextureSize(64, 32);
      lwmembrane4.mirror = true;
      setRotation(lwmembrane4, 23f/rads, 0F, 0F);
      lwmembrane4b = new ModelRenderer(this, 100, 19);
      lwmembrane4b.addBox(0F, -4.5F, 0F, 0, 5, 5);
      lwmembrane4b.setRotationPoint(0, 0, 0);
      lwmembrane4b.setTextureSize(64, 32);
      lwmembrane4b.mirror = true;
      setRotation(lwmembrane4b, 10F/rads, 0F, 0F);
      lwmembrane5 = new ModelRenderer(this, 73, 39);
      lwmembrane5.addBox(0F, 0F, 0F, 0, 5, 13);
      lwmembrane5.setRotationPoint(0, 0, 0f);
      lwmembrane5.setTextureSize(64, 32);
      lwmembrane5.mirror = true;
      setRotation(lwmembrane5, 0F, 0F, 0F);
      lwmembrane5b = new ModelRenderer(this, 111, 19);
      lwmembrane5b.addBox(0F, -0.5F, 0F, 0, 5, 5);
      lwmembrane5b.setRotationPoint(0F, 0F, 0F);
      lwmembrane5b.setTextureSize(64, 32);
      lwmembrane5b.mirror = true;
      setRotation(lwmembrane5b, 0F, 0F, 0F);
      lwmembrane6 = new ModelRenderer(this, 100, 39);
      lwmembrane6.addBox(0F, 0F, 0F, 0, 5, 7);
      lwmembrane6.setRotationPoint(0, 0, 0f);
      lwmembrane6.setTextureSize(64, 32);
      lwmembrane6.mirror = true;
      setRotation(lwmembrane6, 0, 0F, 0F);
      lwmembrane6b = new ModelRenderer(this, 118, 39);
      lwmembrane6b.addBox(0F, 0F, 0F, 0, 12, 4);
      lwmembrane6b.setRotationPoint(0, 0, 0f);
      lwmembrane6b.setTextureSize(64, 32);
      lwmembrane6b.mirror = true;
      setRotation(lwmembrane6b, 0, 0F, 0F);
      lwmembrane7 = new ModelRenderer(this, 79, 59);
      lwmembrane7.addBox(0F, 0F, 0F, 0, 5, 5);
      lwmembrane7.setRotationPoint(0, 0, 0f);
      lwmembrane7.setTextureSize(64, 32);
      lwmembrane7.mirror = true;
      setRotation(lwmembrane7, 0, 0F, 0F);
      lwmembrane7b = new ModelRenderer(this, 70, 59);
      lwmembrane7b.addBox(0F, 0F, -4F, 0, 11, 4);
      lwmembrane7b.setRotationPoint(0, 0, 0f);
      lwmembrane7b.setTextureSize(64, 32);
      lwmembrane7b.mirror = true;
      setRotation(lwmembrane7b, 0, 0F, 0F);
      lwmembrane8 = new ModelRenderer(this, 100, 59);
      lwmembrane8.addBox(0F, -4.5F, 0F, 0, 5, 9);
      lwmembrane8.setRotationPoint(0, 0, -1f);
      lwmembrane8.setTextureSize(64, 32);
      lwmembrane8.mirror = true;
      setRotation(lwmembrane8, -90F/rads, 0F, 0F);
      lwmembrane9 = new ModelRenderer(this, 85, 75);
      lwmembrane9.addBox(0F, -0.5F, -7F, 0, 3, 7);
      lwmembrane9.setRotationPoint(0, 0, 7f);
      lwmembrane9.setTextureSize(64, 32);
      lwmembrane9.mirror = true;
      setRotation(lwmembrane9, -20/rads, 0F, 0F);
      lwmembrane10 = new ModelRenderer(this, 100, 75);
      lwmembrane10.addBox(0F, -0.5F, 0F, 0, 3, 7);
      lwmembrane10.setRotationPoint(0, 0, -1f);
      lwmembrane10.setTextureSize(64, 32);
      lwmembrane10.mirror = true;
      setRotation(lwmembrane10, 20F/rads, 0F, 0F);
      
      lwmem11 = new ModelRenderer(this, 73, 86);
      lwmem11.addBox(0F, -3F, 0F, 0, 3, 13);
      lwmem11.setRotationPoint(0, 0, 0);
      lwmem11.setTextureSize(64, 32);
      lwmem11.mirror = true;
      setRotation(lwmem11, 0F, 0F, 0F);
      rwmem11 = new ModelRenderer(this, 73, 86);
      rwmem11.addBox(0F, -3F, 0F, 0, 3, 13);
      rwmem11.setRotationPoint(0, 0, 0);
      rwmem11.setTextureSize(64, 32);
      rwmem11.mirror = true;
      setRotation(rwmem11, 0F, 0F, 0F);
      
      toothr = new ModelRenderer(this, 59, 0);
      toothr.addBox(-1F, -2F, -1F, 1, 2, 1);
      toothr.setRotationPoint(-1.7f, -1, -3.7f);
      toothr.setTextureSize(64, 32);
      setRotation(toothr, 5/rads, 0F, 0F);

      toothl = new ModelRenderer(this, 59, 0);
      toothl.addBox(0f, -2F, -1F, 1, 2, 1);
      toothl.setRotationPoint(1.7f, -1, -3.7f);
      toothl.setTextureSize(64, 32);
      toothl.mirror = true;
      setRotation(toothl, 5/rads, 0F, 0F);

      //mainbody
      this.lowerbody.addChild(upperbody);
      this.lowerbody.addChild(leftleg); this.leftleg.addChild(leftleglower);
      this.lowerbody.addChild(rightleg); this.rightleg.addChild(rightleglower);
      this.upperbody.addChild(head);
      this.head.addChild(mouth); this.head.addChild(mouthlower);      this.head.addChild(nose);
      this.mouthlower.addChild(toothr); this.mouthlower.addChild(toothl);
      this.upperbody.addChild(leftarm); this.leftarm.addChild(leftshoulder); this.leftarm.addChild(leftforearm);
      this.upperbody.addChild(rightarm); this.rightarm.addChild(rightshoulder); this.rightarm.addChild(rightforearm);
      
      //right wing
      this.upperbody.addChild(rwShoulder);
      this.rwShoulder.addChild(rwupperarm); this.rwupperarm.addChild(rwelbow); this.rwelbow.addChild(rwelbow2); this.rwelbow2.addChild(rwelbow2b);
      this.rwelbow.addChild(rwlowerarm); this.rwlowerarm.addChild(rwwrist);
      this.rwwrist.addChild(rwthumb); this.rwthumb.addChild(rwthumbclaw);
      this.rwwrist.addChild(rwfinger1); this.rwfinger1.addChild(rwfinger1b); this.rwfinger1b.addChild(rwfinger1c); this.rwfinger1c.addChild(rwfinger1claw);
      this.rwwrist.addChild(rwfinger2); this.rwfinger2.addChild(rwfinger2b); this.rwfinger2b.addChild(rwfinger2c); this.rwfinger2c.addChild(rwfinger2claw);
      this.rwwrist.addChild(rwfinger3); this.rwfinger3.addChild(rwfinger3b); this.rwfinger3b.addChild(rwfinger3c); this.rwfinger3c.addChild(rwfinger3claw);
      
      //right wing membrane
      this.rwfinger1.addChild(rwmembrane1); this.rwfinger1.addChild(rwmem11);
      this.rwfinger2.addChild(rwmembrane2);
      this.rwfinger2.addChild(rwmembrane3);
      this.rwfinger3.addChild(rwmembrane4);
      this.rwfinger3.addChild(rwmembrane5);
      this.rwlowerarm.addChild(rwmembrane6); //finger3
      this.rwupperarm.addChild(rwmembrane7);
      this.rwupperarm.addChild(rwmembrane8);
      this.rwlowerarm.addChild(rwmembrane9);
      this.rwupperarm.addChild(rwmembrane10);
      this.rwelbow.addChild(rwmembrane6b);       this.rwelbow.addChild(rwmembrane7b);

      this.rwfinger1b.addChild(rwmembrane1b);
      this.rwfinger2b.addChild(rwmembrane2b);
      this.rwfinger2b.addChild(rwmembrane3b);
      this.rwfinger3b.addChild(rwmembrane4b);
      this.rwfinger3b.addChild(rwmembrane5b);

      //left wing
      this.upperbody.addChild(lwShoulder);
      this.lwShoulder.addChild(lwupperarm); this.lwupperarm.addChild(lwelbow); this.lwelbow.addChild(lwelbow2); this.lwelbow2.addChild(lwelbow2b);
      this.lwelbow.addChild(lwlowerarm); this.lwlowerarm.addChild(lwwrist);
      this.lwwrist.addChild(lwthumb); this.lwthumb.addChild(lwthumbclaw);
      this.lwwrist.addChild(lwfinger1); this.lwfinger1.addChild(lwfinger1b); this.lwfinger1b.addChild(lwfinger1c); this.lwfinger1c.addChild(lwfinger1claw);
      this.lwwrist.addChild(lwfinger2); this.lwfinger2.addChild(lwfinger2b); this.lwfinger2b.addChild(lwfinger2c); this.lwfinger2c.addChild(lwfinger2claw);
      this.lwwrist.addChild(lwfinger3); this.lwfinger3.addChild(lwfinger3b); this.lwfinger3b.addChild(lwfinger3c); this.lwfinger3c.addChild(lwfinger3claw);
      
      //left wing membrane
      this.lwfinger1.addChild(lwmembrane1); this.lwfinger1.addChild(lwmem11);
      this.lwfinger2.addChild(lwmembrane2);
      this.lwfinger2.addChild(lwmembrane3);
      this.lwfinger3.addChild(lwmembrane4);
      this.lwfinger3.addChild(lwmembrane5);
      this.lwlowerarm.addChild(lwmembrane6);
      this.lwupperarm.addChild(lwmembrane7);
      this.lwupperarm.addChild(lwmembrane8);
      this.lwlowerarm.addChild(lwmembrane9);
      this.lwupperarm.addChild(lwmembrane10);

      this.lwelbow.addChild(lwmembrane6b);       this.lwelbow.addChild(lwmembrane7b);
      
      this.lwfinger1b.addChild(lwmembrane1b);
      this.lwfinger2b.addChild(lwmembrane2b);
      this.lwfinger2b.addChild(lwmembrane3b);
      this.lwfinger3b.addChild(lwmembrane4b);
      this.lwfinger3b.addChild(lwmembrane5b);

  }
  
  public void render(Entity ntt, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(ntt, f, f1, f2, f3, f4, f5);
    this.setRotationAngles(f, f1, f2, f3, f4, f5, ntt);
    float f6 = 2.0F;
    int i1 = 8;
    int i2 = 4;

    if(this.isChild) {
    
    	GL11.glPushMatrix();
    	f6 = 2f;
    	GL11.glScalef(1.0F / f6, 1.0F / f6, 1.0F / f6);
    	GL11.glTranslatef(0.0F, (i1) * f5, i2 * f5);
    	this.lowerbody.render(f5);
    	GL11.glPopMatrix();
    }
    else 
    {
    	GL11.glPushMatrix();
    	this.lowerbody.render(f5);
        GL11.glPopMatrix();
    }
	
    //System.out.println(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float time, float motion, float age, float yrot, float xrot, float f5, Entity ntt)
  {
    super.setRotationAngles(time, motion, age, yrot, xrot, f5, ntt);

    EntityGorrbat nttgb = (EntityGorrbat)ntt;
    boolean flying = //nttgb.ticksExisted%20 == 0 &&
    		nttgb.youCanFly();
    boolean jump = nttgb.youCanJump();
    float raintest = nttgb.worldObj.getRainStrength(1);
    int t = nttgb.getLivingSoundTime();

    
    //if(nttgb.ticksExisted%10 == 0)
    {
    	//System.out.println(flying);
    }

    //motion = 0.32f;
    //time = age/2;
    
    this.lowerbody.rotateAngleX = 60f/rads;
    
    //breathing
    float breathing = (float) (MathHelper.sin((float) (age / 2/Math.PI)+(nttgb.getEntityId()/10000)) * 0.03f);
    this.upperbody.rotateAngleX = -15f/rads + breathing;
    
    
    this.head.rotateAngleX = + this.upperbody.rotateAngleX - 15/rads + (xrot/rads * 0.8f) - breathing;
    this.head.rotateAngleY =  yrot/rads * 0.6f;

    //chat
    this.mouthlower.rotateAngleX = -MathHelper.sin((float) ((t/Math.PI) * 0.25F + 44/rads))*2.5f;// - motion/2; //was motion/2
	  if (this.mouthlower.rotateAngleX < 0/rads){this.mouthlower.rotateAngleX = 0/rads;}
	  if (this.mouthlower.rotateAngleX > 30/rads){this.mouthlower.rotateAngleX = 30/rads;}
    
    
    
    //all below would be part of a flight boolean.
    //flight bob
    float amp = (float) (Math.sin(age*0.15)*3);
    float r = 0.6125f;
    
    //motion = 0.20f;
    //time = age/2;
    
    this.rightleg.rotationPointZ = 0; //-1
    this.leftleg.rotationPointZ = 0;
    
    //the issue with stuttering probably due to motion flickering in value.
    if((flying || jump))
    {
    	if(motion < 0.9 && motion > 0.7f) {motion = 0.9f;}
    	//System.out.println(motion);
    	this.lowerbody.rotateAngleX = 10f/rads + (motion*1.25f); // + motion*0.8f;
    	this.upperbody.rotateAngleX = 30/rads + breathing - this.lowerbody.rotateAngleX;
    	
    	this.rightleg.rotateAngleY = this.upperbody.rotateAngleX*0.5f + motion*0.5f;
    	this.rightleg.rotateAngleZ = -this.upperbody.rotateAngleX*1.25f - motion;
    	this.rightleg.rotateAngleX = -this.upperbody.rotateAngleX * 0.5f - 50/rads - motion*0.75f;//*0.75f;
    	this.rightleglower.rotateAngleX = this.upperbody.rotateAngleX + 0.6f; // + 8/rads;

    	this.leftleg.rotateAngleY = -this.upperbody.rotateAngleX*0.5f - motion*0.5f;
    	this.leftleg.rotateAngleZ = this.upperbody.rotateAngleX*1.25f + motion;
    	this.leftleg.rotateAngleX = -this.upperbody.rotateAngleX * 0.5f - 50/rads - motion*0.75f;//*0.75f;
    	this.leftleglower.rotateAngleX = this.upperbody.rotateAngleX + 0.6f; // + 8/rads;
    	
    	
    	this.lowerbody.rotationPointY = (float) ((this.isChild ? 20 : 10)
    		 + (Math.sin(age*0.2)*amp) + amp * (1 - motion*2));
    	this.lowerbody.rotationPointX = (float) (Math.sin(age*0.0125)*amp) * (1 - motion*2);
    	this.lowerbody.rotationPointZ = ((float) Math.sqrt((amp * amp)
    			- (this.lowerbody.rotationPointX * this.lowerbody.rotationPointX))) - amp*1.75f
    			* (1 - motion*2);
    	
    	this.leftleg.rotateAngleX = -65f/rads;
    	this.leftleglower.rotateAngleX =  8f/rads;
    	
    	//arms
    	this.rightarm.rotateAngleX = -40f/rads - breathing + 15/rads + motion*0.25f
    			- (raintest < 0.5f && raintest > 0 && motion <= 0.01 ? 50/rads : 0);// && motion == 0);
    	this.rightarm.rotateAngleZ = 15/rads + breathing;
    	this.rightshoulder.rotateAngleZ = -this.rightarm.rotateAngleZ*0.5f;
    	this.rightforearm.rotateAngleZ = -15/rads - breathing;
    	
    	this.leftarm.rotateAngleX = -40f/rads - breathing + 15/rads + motion*0.25f;
    	this.leftarm.rotateAngleZ = -15/rads - breathing;
    	this.leftshoulder.rotateAngleZ = this.rightarm.rotateAngleZ*0.5f;
    	this.leftforearm.rotateAngleZ = 15/rads + breathing;
    	
    	float wfamp = 0.545f;
    	float flapf = (0.1875f * age) + (nttgb.getEntityId()/15009); //change firtst number to adjust wing flap speed.
    	//wing flap
    	this.rwShoulder.rotateAngleY = 0;// -(float) (45/rads + Math.sin(age*0.1)*0.5f);
    this.rwShoulder.rotateAngleX = motion;

    this.rwupperarm.rotateAngleY = (float) (-70/rads + Math.sin(1+flapf)*wfamp);
    this.rwlowerarm.rotateAngleY = (float) (Math.sin(1.25+flapf)*wfamp);
    this.rwfinger1.rotateAngleY = (float) (Math.sin(1.5+flapf)*wfamp);
    this.rwfinger2.rotateAngleY = this.rwfinger1.rotateAngleY*0.5f;
    this.rwthumb.rotateAngleZ = this.rwfinger1.rotateAngleY;
    this.rwmembrane1.rotateAngleZ = this.rwfinger1.rotateAngleY*0.5f;
    this.rwmembrane1b.rotateAngleZ = this.rwfinger1.rotateAngleY*0.5f;
    this.rwmembrane2.rotateAngleZ = this.rwfinger2.rotateAngleY*0.5f;
    this.rwmembrane2b.rotateAngleZ = this.rwfinger2.rotateAngleY*0.5f;
    this.rwmembrane6b.rotateAngleY = this.rwlowerarm.rotateAngleY;
    this.rwmembrane7b.rotateAngleY = 0;//-this.rwlowerarm.rotateAngleY;
    
    //wing fold
    this.rwShoulder.rotateAngleZ = 15/rads;
    this.rwupperarm.rotateAngleX = (float) (Math.sin(flapf-0.75)*0.3f) - 35/rads;
    this.rwlowerarm.rotateAngleX = -this.rwupperarm.rotateAngleX;// + 45/rads;
    this.rwelbow.rotateAngleX = -this.rwupperarm.rotateAngleX;
    this.rwwrist.rotateAngleX = -this.rwlowerarm.rotateAngleX;
    this.rwfinger1.rotateAngleX = -this.rwlowerarm.rotateAngleX + 15/rads;
    this.rwfinger2.rotateAngleX = this.rwfinger1.rotateAngleX*0.5f - 45f/rads;
    this.rwthumb.rotateAngleX = this.rwfinger1.rotateAngleX;
    this.rwmembrane6b.rotateAngleY =  this.rwlowerarm.rotateAngleY;

    this.rwmembrane8.rotateAngleX = -this.rwupperarm.rotateAngleX*0.5f -90/rads;
    
    //left wing flap
    this.lwShoulder.rotateAngleX = motion;
    this.lwShoulder.rotateAngleY = 0;// -(float) (45/rads + Math.sin(age*0.1)*0.5f);
    this.lwupperarm.rotateAngleY = -(float) (-70/rads + (Math.sin(1+flapf)*wfamp));
    this.lwlowerarm.rotateAngleY = -(float) (Math.sin(1.25+flapf)*wfamp);
    this.lwfinger1.rotateAngleY = -(float) (Math.sin(1.5+flapf)*wfamp);
    this.lwfinger2.rotateAngleY = this.lwfinger1.rotateAngleY*0.5f;
    this.lwthumb.rotateAngleZ = this.lwfinger1.rotateAngleY;
    this.lwmembrane1.rotateAngleZ = this.lwfinger1.rotateAngleY*0.5f;
    this.lwmembrane1b.rotateAngleZ = this.lwfinger1.rotateAngleY*0.5f;
    this.lwmembrane2.rotateAngleZ = this.lwfinger2.rotateAngleY*0.5f;
    this.lwmembrane2b.rotateAngleZ = this.lwfinger2.rotateAngleY*0.5f;
    this.lwmembrane6b.rotateAngleY = this.lwlowerarm.rotateAngleY;
    this.lwmembrane7b.rotateAngleY = 0;//-this.rwlowerarm.rotateAngleY;

    //left wing fold
    this.lwShoulder.rotateAngleZ = -15/rads;
    this.lwupperarm.rotateAngleX = (float) (Math.sin(flapf-0.75)*0.3f) - 35/rads;
    this.lwlowerarm.rotateAngleX = -this.lwupperarm.rotateAngleX;// + 45/rads;
    this.lwelbow.rotateAngleX = -this.lwupperarm.rotateAngleX;
    this.lwwrist.rotateAngleX = -this.lwlowerarm.rotateAngleX;
    this.lwfinger1.rotateAngleX = -this.lwlowerarm.rotateAngleX + 15/rads;
    this.lwfinger2.rotateAngleX = this.lwfinger1.rotateAngleX*0.5f - 45f/rads;
    this.lwthumb.rotateAngleX = this.lwfinger1.rotateAngleX;
    this.lwmembrane8.rotateAngleX = -this.lwupperarm.rotateAngleX*0.5f -90/rads;
    this.lwmembrane6b.rotateAngleY =  this.lwlowerarm.rotateAngleY;
    }
    else
    {
    	float motionmod = 0.15f;
    	this.lowerbody.rotationPointX = 0;
    	this.lowerbody.rotationPointY = (this.isChild ? 20 : 10) - (MathHelper.sin(time * (1 * r)) * 2F) * motion;
    	this.lowerbody.rotationPointZ = 0;
    	//motion = 0;
    	//add in Z swing, and offset arms to produce truer gallop effect
    	float wamod = 0.8f;
        this.rightleg.rotateAngleX = -65f/rads - (1.4F * MathHelper.sin(-0.5f + time * r) * motion * wamod) + (motion*0.5f);
        this.rightleglower.rotateAngleX = 8f/rads - (1.4F * MathHelper.sin(-1.5f + time * r) * motion * wamod);
        this.rightleg.rotateAngleY = 0 - (motion*0.5f);

    	this.rightleg.rotateAngleZ = 0;

    	this.leftleg.rotateAngleZ = 0;
        
    	this.leftleg.rotateAngleX = -65f/rads + (1.4F * MathHelper.sin(-2.f + time * r) * motion * wamod) + (motion*0.5f);
        this.leftleglower.rotateAngleX = 8f/rads + (1.4F * MathHelper.sin(-3f + time * r) * motion * wamod);
        this.leftleg.rotateAngleY = 0 + (motion*0.5f);

        //arms
        this.rightarm.rotateAngleX = -60f/rads - breathing + (1.4F * MathHelper.sin(1.5f + time * r) * motion * wamod) - (motion*0.5f)
        		- (raintest < 0.5f && raintest > 0 && motion <= 0.01 ? 50/rads : 0);
        this.rightarm.rotateAngleZ = 15/rads + breathing;
        this.rightarm.rotateAngleY = 5/rads + breathing - motion * motionmod;

        this.rightshoulder.rotateAngleZ = -this.rightarm.rotateAngleZ*0.5f;
        this.rightforearm.rotateAngleZ = -15/rads - breathing * 2;
        
        this.leftarm.rotateAngleX = -60f/rads - breathing - (1.4F * MathHelper.sin(time * r) * motion * wamod)  - (motion*0.5f);
        this.leftarm.rotateAngleZ = -15/rads - breathing;
        this.leftarm.rotateAngleY = -5/rads - breathing + motion * motionmod;

        this.leftshoulder.rotateAngleZ = this.rightarm.rotateAngleZ*0.5f;
        this.leftforearm.rotateAngleZ = 15/rads + breathing  * 2;
        
        //wings landed:
        float wfamp = 0.55f;
        float flapf = (0.2f * age) + (nttgb.getEntityId()/10000);
        //wing flap
        this.rwShoulder.rotateAngleY = 0;// -(float) (45/rads + Math.sin(age*0.1)*0.5f);
        this.rwupperarm.rotateAngleY = (float) -30/rads + breathing;
        this.rwlowerarm.rotateAngleY = (float) 0/rads;
        this.rwfinger1.rotateAngleY = (float) -5/rads;
        this.rwfinger2.rotateAngleY = this.rwfinger1.rotateAngleY*0.5f;
        this.rwfinger3.rotateAngleY = this.rwfinger1.rotateAngleY*0.25f;
        
        this.rwthumb.rotateAngleZ = this.rwfinger1.rotateAngleY;
        this.rwmembrane1.rotateAngleZ = this.rwfinger1.rotateAngleY*0.5f;
        this.rwmembrane1b.rotateAngleZ = this.rwfinger1.rotateAngleY*0.5f;
        this.rwmembrane2.rotateAngleZ = this.rwfinger2.rotateAngleY*0.5f;
        this.rwmembrane2b.rotateAngleZ = this.rwfinger2.rotateAngleY*0.5f;
        this.rwmembrane6b.rotateAngleY = this.rwlowerarm.rotateAngleY;
        this.rwmembrane7b.rotateAngleY = 0;//-this.rwlowerarm.rotateAngleY;
        
        //wing fold
        this.rwShoulder.rotateAngleZ = 15/rads - breathing; //raises (for displaying?)
        this.rwShoulder.rotateAngleX = motion*1.5f;
        this.rwupperarm.rotateAngleX = - 55/rads;
        this.rwlowerarm.rotateAngleX = -this.rwupperarm.rotateAngleX;// + 45/rads;
        this.rwelbow.rotateAngleX = -this.rwupperarm.rotateAngleX;
        this.rwwrist.rotateAngleX = -this.rwlowerarm.rotateAngleX;
        this.rwfinger1.rotateAngleX = -this.rwlowerarm.rotateAngleX +5/rads;
        this.rwfinger2.rotateAngleX = this.rwfinger1.rotateAngleX*0.5f - 45f/rads;
        this.rwthumb.rotateAngleX = this.rwfinger1.rotateAngleX;
        this.rwmembrane8.rotateAngleX = -this.rwupperarm.rotateAngleX*0.5f -90/rads;
        
        //left wing flap
        this.lwShoulder.rotateAngleY = 0;// -(float) (45/rads + Math.sin(age*0.1)*0.5f);
        this.lwupperarm.rotateAngleY = (float) 30/rads - breathing;
        this.lwlowerarm.rotateAngleY = (float) 0;
        this.lwfinger1.rotateAngleY = (float) -5/rads;
        this.lwfinger2.rotateAngleY = this.lwfinger1.rotateAngleY*0.5f;
        this.lwfinger3.rotateAngleY = this.lwfinger1.rotateAngleY*0.25f;
        //this.lwwrist.rotateAngleZ = 0/rads;
        
        this.lwthumb.rotateAngleZ = -this.lwfinger1.rotateAngleY;
        this.lwmembrane1.rotateAngleZ = this.lwfinger1.rotateAngleY*0.5f;
        this.lwmembrane1b.rotateAngleZ = this.lwfinger1.rotateAngleY*0.5f;
        this.lwmembrane2.rotateAngleZ = this.lwfinger2.rotateAngleY*0.5f;
        this.lwmembrane2b.rotateAngleZ = this.lwfinger2.rotateAngleY*0.5f;
        this.lwmembrane6b.rotateAngleY = this.lwlowerarm.rotateAngleY;
        this.lwmembrane7b.rotateAngleY = 0;//-this.rwlowerarm.rotateAngleY;

        //left wing fold
        this.lwShoulder.rotateAngleZ = -15/rads + breathing;
        this.lwShoulder.rotateAngleX = motion*1.5f;
        this.lwupperarm.rotateAngleX = -55/rads;
        this.lwlowerarm.rotateAngleX = -this.lwupperarm.rotateAngleX;// + 45/rads;
        this.lwelbow.rotateAngleX = -this.lwupperarm.rotateAngleX;
        this.lwwrist.rotateAngleX = -this.lwlowerarm.rotateAngleX;
        this.lwfinger1.rotateAngleX = -this.lwlowerarm.rotateAngleX + 5/rads;
        this.lwfinger2.rotateAngleX = this.lwfinger1.rotateAngleX*0.5f - 45f/rads;
        this.lwthumb.rotateAngleX = this.lwfinger1.rotateAngleX;
        this.lwmembrane6b.rotateAngleY =  this.lwlowerarm.rotateAngleY;
        }
    
    
  //kneecap conditionals
    if (this.rightleglower.rotateAngleX < 0/rads){this.rightleglower.rotateAngleX = 0/rads;}
    if (this.leftleglower.rotateAngleX < 0/rads){this.leftleglower.rotateAngleX = 0/rads;}

    } 

}
