// Java generated by Techne

package com.salvestrom.w2theJungle.mobs.models;

import java.util.Random;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.math.MathHelper;

import com.salvestrom.w2theJungle.mobs.entity.EntityMistSpider;

public class ModelMistSpider extends ModelBase
{
  //fields
	ModelRenderer spiderHead;
    ModelRenderer spiderNeck;
    ModelRenderer spiderBody;
    ModelRenderer spiderLeg8;
    ModelRenderer spiderLeg6;
    ModelRenderer spiderLeg4;
    ModelRenderer spiderLeg2;
    ModelRenderer spiderLeg7;
    ModelRenderer spiderLeg5;
    ModelRenderer spiderLeg3;
    ModelRenderer spiderLeg1;
    ModelRenderer Leg8b;
    ModelRenderer Leg6b;
    ModelRenderer Leg4b;
    ModelRenderer Leg2b;
    ModelRenderer Leg7b;
    ModelRenderer Leg5b;
    ModelRenderer Leg3b;
    ModelRenderer Leg1b;
  
  public ModelMistSpider()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      spiderHead = new ModelRenderer(this, 45, 10);
      spiderHead.addBox(-4F, -4F, -7F, 10, 10, 10);
      spiderHead.setRotationPoint(-1F, 0F, -5F); //y was 8
      spiderHead.setTextureSize(128, 128);
      spiderHead.mirror = true;
      setRotation(spiderHead, 0F, 0F, 0F);
      spiderNeck = new ModelRenderer(this, 0, 0);
      spiderNeck.addBox(-4F, -3F, -3F, 8, 8, 8);
      spiderNeck.setRotationPoint(0F, 8F, 0F);
      spiderNeck.setTextureSize(128, 128);
      spiderNeck.mirror = true;
      setRotation(spiderNeck, 0F, 0F, 0F);
      spiderBody = new ModelRenderer(this, 0, 16);
      spiderBody.addBox(-5F, -4F, -6F, 14, 12, 15);
      spiderBody.setRotationPoint(-2F, -3F, 11F); //y was 5
      spiderBody.setTextureSize(128, 128);
      spiderBody.mirror = true;
      setRotation(spiderBody, 0F, 0F, 0F);
      spiderLeg8 = new ModelRenderer(this, 75, 0);
      spiderLeg8.addBox(-1F, -1F, -2F, 14, 3, 3);
      spiderLeg8.setRotationPoint(4F, 4F, -2F); //y was 12 on all legs
      spiderLeg8.setTextureSize(128, 128);
      spiderLeg8.mirror = true;
      setRotation(spiderLeg8, 0F, 0.5759587F, 0.1919862F);
      spiderLeg6 = new ModelRenderer(this, 75, 0);
      spiderLeg6.addBox(-1F, -1F, -1F, 14, 3, 3);
      spiderLeg6.setRotationPoint(4F, 4F, 0F);
      spiderLeg6.setTextureSize(128, 128);
      spiderLeg6.mirror = true;
      setRotation(spiderLeg6, 0F, 0.2792527F, 0.1919862F);
      spiderLeg4 = new ModelRenderer(this, 75, 0);
      spiderLeg4.addBox(-1F, -1F, -1F, 14, 3, 3);
      spiderLeg4.setRotationPoint(4F, 4F, 2F);
      spiderLeg4.setTextureSize(128, 128);
      spiderLeg4.mirror = true;
      setRotation(spiderLeg4, 0F, -0.2792527F, 0.1919862F);
      spiderLeg2 = new ModelRenderer(this, 75, 0);
      spiderLeg2.addBox(-1F, -1F, -1F, 14, 3, 3);
      spiderLeg2.setRotationPoint(4F, 4F, 4F);
      spiderLeg2.setTextureSize(128, 128);
      spiderLeg2.mirror = true;
      setRotation(spiderLeg2, 0F, -0.5759587F, 0.1919862F);
      spiderLeg7 = new ModelRenderer(this, 76, 11);
      spiderLeg7.addBox(-13F, -1F, -1F, 14, 3, 3);
      spiderLeg7.setRotationPoint(-4F, 4F, -2F);
      spiderLeg7.setTextureSize(128, 128);
      spiderLeg7.mirror = true;
      setRotation(spiderLeg7, 0F, -0.5759587F, -0.1919862F);
      spiderLeg5 = new ModelRenderer(this, 76, 11);
      spiderLeg5.addBox(-13F, -1F, -1F, 14, 3, 3);
      spiderLeg5.setRotationPoint(-4F, 4F, 0F);
      spiderLeg5.setTextureSize(128, 128);
      spiderLeg5.mirror = true;
      setRotation(spiderLeg5, 0F, -0.2792527F, -0.1919862F);
      spiderLeg3 = new ModelRenderer(this, 76, 11);
      spiderLeg3.addBox(-13F, -1F, -1F, 14, 3, 3);
      spiderLeg3.setRotationPoint(-4F, 4F, 2F);
      spiderLeg3.setTextureSize(128, 128);
      spiderLeg3.mirror = true;
      setRotation(spiderLeg3, 0F, 0.2792527F, -0.1919862F);
      spiderLeg1 = new ModelRenderer(this, 76, 11);
      spiderLeg1.addBox(-13F, -1F, -1F, 14, 3, 3);
      spiderLeg1.setRotationPoint(-4F, 4F, 4F);
      spiderLeg1.setTextureSize(128, 128);
      spiderLeg1.mirror = true;
      setRotation(spiderLeg1, 0F, 0.5759587F, -0.1919862F);
      Leg8b = new ModelRenderer(this, 25, 0);
      Leg8b.addBox(-1F, -1F, -1.04F, 16, 2, 2);
      Leg8b.setRotationPoint(13F, 1F, -0.5F);
      Leg8b.setTextureSize(128, 128);
      Leg8b.mirror = true;
      setRotation(Leg8b, 0F, 0F, 0.5759587F); //0.5759587F
      Leg6b = new ModelRenderer(this, 25, 0);
      Leg6b.addBox(-1F, -1F, -1.04F, 16, 2, 2);
      Leg6b.setRotationPoint(13F, 1F, 0.5F);
      Leg6b.setTextureSize(128, 128);
      Leg6b.mirror = true;
      setRotation(Leg6b, 0F, 0F, 0.5759587F);
      Leg4b = new ModelRenderer(this, 25, 0);
      Leg4b.addBox(-1F, -1F, -1.04F, 16, 2, 2);
      Leg4b.setRotationPoint(13F, 1F, 0.5F);
      Leg4b.setTextureSize(128, 128);
      Leg4b.mirror = true;
      setRotation(Leg4b, 0F, 0F, 0.5759587F);
      Leg2b = new ModelRenderer(this, 25, 0);
      Leg2b.addBox(-1F, -1F, -1.04F, 16, 2, 2);
      Leg2b.setRotationPoint(13F, 1F, 0.50F);
      Leg2b.setTextureSize(128, 128);
      Leg2b.mirror = true;
      setRotation(Leg2b, 0F, 0F, 0.5759587F);
      Leg7b = new ModelRenderer(this, 33, 5);
      Leg7b.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg7b.setRotationPoint(-13F, 1F, 0.5F);
      Leg7b.setTextureSize(128, 128);
      Leg7b.mirror = true;
      setRotation(Leg7b, 0F, 0F, -0.5759587F);
      Leg5b = new ModelRenderer(this, 33, 5);
      Leg5b.addBox(-15F, -1F, -1F, 16, 2, 2);
      Leg5b.setRotationPoint(-13F, 1F, 0.5F);
      Leg5b.setTextureSize(128, 128);
      Leg5b.mirror = true;
      setRotation(Leg5b, 0F, 0F, -0.5759587F);
      Leg3b = new ModelRenderer(this, 33, 5);
      Leg3b.addBox(-15F, -1F, -0.9466667F, 16, 2, 2);
      Leg3b.setRotationPoint(-13F, 1F, 0.5F);
      Leg3b.setTextureSize(128, 128);
      Leg3b.mirror = true;
      setRotation(Leg3b, 0F, 0F, -0.5759587F);
      Leg1b = new ModelRenderer(this, 33, 5);
      Leg1b.addBox(-15F, -1F, -0.9466667F, 16, 2, 2);
      Leg1b.setRotationPoint(-13F, 1F, 0.5F);
      Leg1b.setTextureSize(128, 128);
      Leg1b.mirror = true;
      setRotation(Leg1b, 0F, 0F, -0.5759587F);
      
      this.spiderNeck.addChild(spiderLeg1);
      this.spiderNeck.addChild(spiderLeg2);
      this.spiderNeck.addChild(spiderLeg3);
      this.spiderNeck.addChild(spiderLeg4);
      this.spiderNeck.addChild(spiderLeg5);
      this.spiderNeck.addChild(spiderLeg6);
      this.spiderNeck.addChild(spiderLeg7);
      this.spiderNeck.addChild(spiderLeg8);
      this.spiderNeck.addChild(spiderHead);
      this.spiderNeck.addChild(spiderBody);
      
      this.spiderLeg1.addChild(Leg1b);
      this.spiderLeg2.addChild(Leg2b);
      this.spiderLeg3.addChild(Leg3b);
      this.spiderLeg4.addChild(Leg4b);
      this.spiderLeg5.addChild(Leg5b);
      this.spiderLeg6.addChild(Leg6b);
      this.spiderLeg7.addChild(Leg7b);
      this.spiderLeg8.addChild(Leg8b);
      }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.spiderNeck.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity ntt)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, ntt);
    
    this.spiderHead.rotateAngleY = f3 / (180F / (float)Math.PI);
    this.spiderHead.rotateAngleX = f4 / (180F / (float)Math.PI);
    float f6 = -0.1919862F;//0.1919862F; // ((float)Math.PI / 4F);
    this.spiderLeg1.rotateAngleZ = -f6;
    this.spiderLeg2.rotateAngleZ = f6;
    this.spiderLeg3.rotateAngleZ = -f6 * 0.74F;
    this.spiderLeg4.rotateAngleZ = f6 * 0.74F;
    this.spiderLeg5.rotateAngleZ = -f6 * 0.74F;
    this.spiderLeg6.rotateAngleZ = f6 * 0.74F;
    this.spiderLeg7.rotateAngleZ = -f6;
    this.spiderLeg8.rotateAngleZ = f6;
    float f7 = -0.0F;
    float f8 = 0.3926991F;//0.3926991F;
    this.spiderLeg1.rotateAngleY = f8 * 2.0F + f7;
    this.spiderLeg2.rotateAngleY = -f8 * 2.0F - f7;
    this.spiderLeg3.rotateAngleY = f8 * 1.0F + f7;
    this.spiderLeg4.rotateAngleY = -f8 * 1.0F - f7;
    this.spiderLeg5.rotateAngleY = -f8 * 1.0F + f7;
    this.spiderLeg6.rotateAngleY = f8 * 1.0F - f7;
    this.spiderLeg7.rotateAngleY = -f8 * 2.0F + f7;
    this.spiderLeg8.rotateAngleY = f8 * 2.0F - f7;
    float f9 = -(MathHelper.cos(f * 0.6662F * 2.0F + 0.0F) * 0.4F) * f1;
    float f10 = -(MathHelper.cos(f * 0.6662F * 2.0F + (float)Math.PI) * 0.4F) * f1;
    float f11 = -(MathHelper.cos(f * 0.6662F * 2.0F + ((float)Math.PI / 2F)) * 0.4F) * f1;
    float f12 = -(MathHelper.cos(f * 0.6662F * 2.0F + ((float)Math.PI * 3F / 2F)) * 0.4F) * f1;
    float f13 = Math.abs(MathHelper.sin(f * 0.6662F + 0.0F) * 0.4F) * f1;
    float f14 = Math.abs(MathHelper.sin(f * 0.6662F + (float)Math.PI) * 0.4F) * f1;
    float f15 = Math.abs(MathHelper.sin(f * 0.6662F + ((float)Math.PI / 2F)) * 0.4F) * f1;
    float f16 = Math.abs(MathHelper.sin(f * 0.6662F + ((float)Math.PI * 3F / 2F)) * 0.4F) * f1;
    this.spiderLeg1.rotateAngleY += f9;
    this.spiderLeg2.rotateAngleY += -f9;
    this.spiderLeg3.rotateAngleY += f10;
    this.spiderLeg4.rotateAngleY += -f10;
    this.spiderLeg5.rotateAngleY += f11;
    this.spiderLeg6.rotateAngleY += -f11;
    this.spiderLeg7.rotateAngleY += f12;
    this.spiderLeg8.rotateAngleY += -f12;
    this.spiderLeg1.rotateAngleZ += f13;
    this.spiderLeg2.rotateAngleZ += -f13;
    this.spiderLeg3.rotateAngleZ += f14;
    this.spiderLeg4.rotateAngleZ += -f14;
    this.spiderLeg5.rotateAngleZ += f15;
    this.spiderLeg6.rotateAngleZ += -f15;
    this.spiderLeg7.rotateAngleZ += f16;
    this.spiderLeg8.rotateAngleZ += -f16;
    
    this.spiderNeck.rotationPointY = 12;
    
    float f17 = 0.6759587F;//0.5759587F;
    this.Leg1b.rotateAngleZ = -f17;
    this.Leg3b.rotateAngleZ = -f17;
    this.Leg5b.rotateAngleZ = -f17;
    this.Leg7b.rotateAngleZ = -f17;
    this.Leg2b.rotateAngleZ = f17;
    this.Leg4b.rotateAngleZ = f17;
    this.Leg6b.rotateAngleZ = f17;
    this.Leg8b.rotateAngleZ = f17;
    this.Leg1b.rotateAngleZ += -f13;
    this.Leg3b.rotateAngleZ += -f14;
    this.Leg5b.rotateAngleZ += -f15;
    this.Leg7b.rotateAngleZ += -f16;
    this.Leg2b.rotateAngleZ += f13;
    this.Leg4b.rotateAngleZ += f14;
    this.Leg6b.rotateAngleZ += f15;
    this.Leg8b.rotateAngleZ += f16;
    
    //this.spiderNeck.rotateAngleY = 0;
	this.spiderNeck.rotateAngleZ = 0;
	this.spiderNeck.rotateAngleX = 0;
    
    //for dying
    EntityMistSpider mist = (EntityMistSpider)ntt;
    float rads = (float) (180/Math.PI);
    int dt = mist.deathTime;
    
    if(dt > 0) {
    	this.spiderNeck.rotateAngleX = -(dt*18)/rads;
    	this.spiderNeck.rotateAngleZ = -(dt*2.25f)/rads;
    	//this.spiderNeck.rotateAngleY = mist.rotationYaw + -this.spiderNeck.rotateAngleX/2;
    	if(this.spiderNeck.rotateAngleX < -180/rads) {this.spiderNeck.rotateAngleX = -180/rads;}
    	this.spiderNeck.rotationPointY += (dt)/2.4f;
    	
    	float tack = dt/rads + 35/rads;
    	
    	f13 = tack; f14 = tack; f15 = tack; f16 = tack; 
    	
    	this.spiderLeg1.rotateAngleZ -= f13;
        this.spiderLeg2.rotateAngleZ -= -f13;
        this.spiderLeg3.rotateAngleZ -= f14;
        this.spiderLeg4.rotateAngleZ -= -f14;
        this.spiderLeg5.rotateAngleZ -= f15;
        this.spiderLeg6.rotateAngleZ -= -f15;
        this.spiderLeg7.rotateAngleZ -= f16;
        this.spiderLeg8.rotateAngleZ -= -f16;

        //tack = -10;
    	//f13 = tack; f14 = tack; f15 = tack; f16 = tack; 
        
        this.Leg1b.rotateAngleZ += -f13;
        this.Leg3b.rotateAngleZ += -f14;
        this.Leg5b.rotateAngleZ += -f15;
        this.Leg7b.rotateAngleZ += -f16;
        this.Leg2b.rotateAngleZ += f13;
        this.Leg4b.rotateAngleZ += f14;
        this.Leg6b.rotateAngleZ += f15;
        this.Leg8b.rotateAngleZ += f16;
        
    }
    
    //System.out.println(this.spiderNeck.rotateAngleZ);
    
    }
  
  public Random spiderRNG = new Random();
  
  public void setLivingAnimations(EntityLivingBase ntt, float time, float motion, float par4) {
	  
	  //for some reason this made te mob walk like a crab, which is cool and useful but damn weird.
	  //because im rotating left/right not up / down
//	  if (nttbase.motionY > 0)
//	  {this.spiderNeck.rotateAngleY = (float) (1/nttbase.motionY);}
	  if (ntt.motionY >0 && ntt.prevPosY > ntt.posY && spiderRNG.nextInt(10)==0) {
		  this.spiderNeck.rotateAngleX = (float) -(1.65 * ntt.motionY);
		  } else if(ntt.motionY >0 && ntt.prevPosY < ntt.posY && spiderRNG.nextInt(10)==0) {
			  this.spiderNeck.rotateAngleX = (float) (1.65 * ntt.motionY);
			  } else {
				  this.spiderNeck.rotateAngleX = (float) 0;
				  }
	  }
}
